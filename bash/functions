# Export debian chroot
export_debian_chroot(){
	if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	    debian_chroot=$(cat /etc/debian_chroot)
	fi
}

# Export color support
export_color_prompt(){

	# Explicit color support
	case "$TERM" in
	    xterm-color|*-256color) color_prompt=yes;;
	esac

	# Implied color support
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi

}

# Export PS1 parts
export_ps1_parts(){
	PS1=
	export_debian_chroot
	ps1_chroot="${debian_chroot:+($debian_chroot)}"
	ps1_user="\u"
	anchor_host="@"
	ps1_host="\h"
	anchor_wd=":"
	ps1_wd="\w"
}

# Unset PS1 parts
unset_ps1_parts(){
	unset debian_chroot
	unset ps1_chroot
	unset ps1_user
	unset anchor_host
	unset ps1_host
	unset anchor_wd
	unset ps1_wd
}

# Build PS1 from parts
build_ps1(){
	PS1="${PS1}${ps1_chroot} "
	PS1="${PS1}${ps1_user}"					# User
	PS1="${PS1}${anchor_host}"				# Host anchor
	PS1="${PS1}${ps1_host}"					# Host
	PS1="${PS1}${anchor_wd}"				# Working directory anchor
	PS1="${PS1}${ps1_wd} "					# Working directory
}


# Set xterm title
set_xterm_title(){
	case "$TERM" in
	xterm*|rxvt*)
		build_ps1
	    PS1="\[\e]0;${PS1}\a\]"
	    ;;
	*)
	    ;;
	esac
}

# Export PS1 variable
export_ps1(){

	# PS1 parts
	export_ps1_parts

	# Set xterm title
	set_xterm_title

	# Color support
	export_color_prompt
	if [ "$color_prompt" = yes ]; then

		# ANSI escape sequence macros
		local esc=$(printf "\e")
		local bold="\[${esc}[1m\]"
		local end="\[${esc}[0m\]"
		
		# User
		local sgr_user=""
		sgr_user="${sgr_user}${bold}"				# Bold
		sgr_user="${sgr_user}\[${esc}[38;5;214m\]"		# FG: MAXIV Orange: #fea901 (254, 169, 1)
		ps1_user="${sgr_user}${ps1_user}${end}"
		
		# Host
		local sgr_host=""
		case "${HOSTNAME}" in
		w-*)
			sgr_host="${sgr_host}${bold}"			# Bold
			sgr_host="${sgr_host}\[${esc}[97m\]"		# FG: Bright white
			;;
		b-*)
			sgr_host="${sgr_host}${bold}"			# Bold
			sgr_host="${sgr_host}\[${esc}[94m\]"		# FG: Bright blue
			;;
		g-*)
			sgr_host="${sgr_host}${bold}"			# Bold
			sgr_host="${sgr_host}\[${esc}[32m\]"		# FG: Green
			;;
		ogoshi)
			sgr_host="${sgr_host}${bold}"			# Bold
			sgr_host="${sgr_host}\[${esc}[31m\]"		# FG: Red
			;;
		*)
			;;
		esac
		ps1_host="${sgr_host}${ps1_host}${end}"
		
		# Working directory
		local sgr_wd=""
		sgr_wd="${sgr_wd}${bold}"				# Bold
		sgr_wd="${sgr_wd}\[${esc}[48;5;240m\]"			# BG: Grey
		sgr_wd="${sgr_wd}\[${esc}[38;5;248m\]"			# FG: Bright white
		ps1_wd="${sgr_wd}${ps1_wd}${end}"
		
	fi
	
	# Build PS1
	build_ps1

	# Append prompt anchor
	anchor_prompt=$(printf "\u25B9")			# White right-pointing small triangle
	PS1="${PS1}${anchor_prompt} "				# Prompt anchor

	# Unset
	unset color_prompt
	unset_ps1_parts

}



# Listings
lc(){
	ll --color $1 | less -R
}

# su with xauth
sux(){
	local cookie=$(xauth list | head -n 1)
	cookie=${cookie/:/:0}							# Append display
	local xauthority="/home/$1/.Xauthority"					# Define Xauthority file
	sudo XAUTHORITY="$xauthority" su -c "xauth add ${cookie}" $1		# Update .Xauthority file
	sudo XAUTHORITY="$xauthority" su $1


# Toggle touchpad
toggle_touchpad(){
	if [ "$(gsettings get org.gnome.desktop.peripherals.touchpad send-events)" = "'enabled'" ]; then
		gsettings set org.gnome.desktop.peripherals.touchpad send-events 'disabled'
	else
		gsettings set org.gnome.desktop.peripherals.touchpad send-events 'enabled'
	fi
}
